services:
  postgres_db_dev:
    image: postgres:16.1-alpine
    restart: always
    user: postgres
    ports:
      - '${POSTRGES_EXPOSED_DEV_PORT}:5432'
    volumes:
      - ./postgresql:/docker-entrypoint-initdb.d/
      - postgres_dev_data:/var/lib/postgresql/data/
    env_file:
      - .env
      - .env.backend.dev
    networks:
      - developmentnetwork
  redis_dev:
    image: redis:7.2.4-alpine
    restart: always
    ports:
      - '${REDIS_EXPOSED_DEV_PORT}:6379'
    volumes:
      - redis_dev_data:/data
    env_file:
      - .env
      - .env.backend.dev
    networks:
      - developmentnetwork
  django_dev:
    image: propyzsa-backend-django-dev
    pull_policy: never
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: ${BACKEND_TARGET-production}
      args:
        - PORT=${BACKEND_DEV_PORT}
    restart: always
    volumes:
      - ./backend:/home/app/backend
      - ${ENCRYPTION_KEYS_DIR}:/run/secrets
    expose:
      - ${BACKEND_DEV_PORT}
    env_file:
      - .env
      - .env.backend.dev
    depends_on:
      - postgres_db_dev
    links:
      - postgres_db_dev:postgres_db
      - redis_dev:redis
    networks:
      - developmentnetwork
  celery_dev:
    image: propyzsa-backend-django-dev
    pull_policy: never
    command: celery -A property worker -B -l info
    restart: always
    volumes:
      - ./backend:/home/app/backend
    env_file:
      - .env
      - .env.backend.dev
    depends_on:
      - django_dev
      - redis_dev
    links:
      - postgres_db_dev:postgres_db
      - django_dev:django
      - redis_dev:redis
    networks:
      - developmentnetwork
  flower_dev:
    image: mher/flower:2.0.1
    command: celery flower --port=${FLOWER_DEV_PORT} --basic_auth=${FLOWER_USER}:${FLOWER_PASSWORD}
    restart: always
    volumes:
      - flower_dev_data:/data
    expose:
      - ${FLOWER_DEV_PORT}
    env_file:
      - .env
      - .env.backend.dev
    depends_on:
      - redis_dev
    links:
      - redis_dev:redis
    networks:
      - developmentnetwork


networks:
  developmentnetwork:
    name: propyzsa_developmentnetwork
    driver: bridge


volumes:
  postgres_dev_data:
  redis_dev_data:
  flower_dev_data:
